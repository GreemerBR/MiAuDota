//	Position right
@mixin mm_position_right( $cls: "",
	$width: $mm_menuWidth, $minWidth: $mm_menuMinWidth, $maxWidth: $mm_menuMaxWidth
) {
	.mm-wrapper_opening
	{
		#{$cls}.mm-menu_position-right.mm-menu_opened ~ .mm-slideout
		{
			transform: translate3d( -( #{$width * 100}vw ), 0, 0 );
		}
	}

	//	adjust for min- and max-width
	@media all and ( max-width: $minWidth / $width ) {
		.mm-wrapper_opening
		{
			#{$cls}.mm-menu_position-right.mm-menu_opened ~ .mm-slideout
			{
				transform: translate3d( -$minWidth, 0, 0 );
			}
		}
	}
	@media all and ( min-width: $maxWidth / $width ) {
		.mm-wrapper_opening
		{
			#{$cls}.mm-menu_position-right.mm-menu_opened ~ .mm-slideout
			{
				transform: translate3d( -$maxWidth, 0, 0 );
			}
		}
	}
}

//	Position top
@mixin mm_position_top( $cls: "",
	$height: $mm_menuHeight, $minHeight: $mm_menuMinHeight, $maxHeight: $mm_menuMaxHeight
) {
	#{$cls}.mm-menu_position-top
	{
		height: #{$height * 100}vh;
		min-height: $minHeight;
		max-height: $maxHeight;
	}
}

//	Position bottom
@mixin mm_position_bottom( $cls: "",
	$height: $mm_menuHeight, $minHeight: $mm_menuMinHeight, $maxHeight: $mm_menuMaxHeight
) {
	#{$cls}.mm-menu_position-bottom
	{
		height: #{$height * 100}vh;
		min-height: $minHeight;
		max-height: $maxHeight;
	}
}
